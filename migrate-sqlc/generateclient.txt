// package main

// import (
// 	"context"
// 	"example/hello/tutorial"
// 	"log"
// 	"reflect"

// 	"github.com/jackc/pgx/v5"
// 	"github.com/jackc/pgx/v5/pgtype"
// )

// func run() error {
// 	ctx := context.Background()

// 	conn, err := pgx.Connect(ctx, "host=localhost port=5432 user=yseekiaw password=Jb220614@2025 dbname=pgdatabase sslmode=prefer")
// 	if err != nil {
// 		return err
// 	}
// 	defer conn.Close(ctx)

// 	queries := tutorial.New(conn)

// 	// list all authors
// 	authors, err := queries.ListAuthors(ctx)
// 	if err != nil {
// 		return err
// 	}
// 	log.Println(authors)

// 	// create an author
// 	insertedAuthor, err := queries.CreateAuthor(ctx, tutorial.CreateAuthorParams{
// 		Name: "Brian Kernighan",
// 		Bio:  pgtype.Text{String: "Co-author of The C Programming Language and The Go Programming Language", Valid: true},
// 	})
// 	if err != nil {
// 		return err
// 	}
// 	log.Println(insertedAuthor)

// 	// get the author we just inserted
// 	fetchedAuthor, err := queries.GetAuthor(ctx, insertedAuthor.ID)
// 	if err != nil {
// 		return err
// 	}

// 	// prints true
// 	log.Println(reflect.DeepEqual(insertedAuthor, fetchedAuthor))
// 	return nil
// }

// func main() {
// 	if err := run(); err != nil {
// 		log.Fatal(err)
// 	}
// }
